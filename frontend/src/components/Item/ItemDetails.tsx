import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { ItemResponse, UserResponse, UnavailableDatesResponse } from '../../types';
import { itemApi, userApi } from '../../services/api';
import { usePermissions } from '../../hooks/usePermissions';
import AvailabilityCalendar from './AvailabilityCalendar';
import './ItemDetails.css';

const ItemDetails: React.FC = () => {
  const { itemId } = useParams<{ itemId: string }>();
  const navigate = useNavigate();
  const { isRenter, canViewUsers } = usePermissions();

  const [item, setItem] = useState<ItemResponse | null>(null);
  const [owner, setOwner] = useState<UserResponse | null>(null);
  const [unavailableDates, setUnavailableDates] = useState<UnavailableDatesResponse | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  const categories = {
    'ELECTRONICS': '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
    'TOOLS': '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
    'SPORTS_EQUIPMENT': '–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ',
    'CAMPING_GEAR': '–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ',
    'PARTY_SUPPLIES': '–¢–æ–≤–∞—Ä—ã –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤',
    'MUSICAL_INSTRUMENTS': '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
    'PHOTOGRAPHY_EQUIPMENT': '–§–æ—Ç–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
    'GARDENING_TOOLS': '–°–∞–¥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
    'FURNITURE': '–ú–µ–±–µ–ª—å',
    'CLOTHING': '–û–¥–µ–∂–¥–∞',
    'BOOKS': '–ö–Ω–∏–≥–∏',
    'OTHER': '–î—Ä—É–≥–æ–µ'
  };

  useEffect(() => {
    const loadItemDetails = async () => {
      if (!itemId) {
        setError('ID —Ç–æ–≤–∞—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω');
        setLoading(false);
        return;
      }

      console.log('Loading item details for itemId:', itemId);

      try {
        setLoading(true);
        setError(null);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
        console.log('Fetching item data...');
        const itemData = await itemApi.getById(parseInt(itemId));
        setItem(itemData);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∞
        if (canViewUsers() && itemData.ownerId) {
          try {
            console.log('Fetching owner data...');
            const ownerData = await userApi.getById(itemData.ownerId);
            setOwner(ownerData);
          } catch (ownerError) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ:', ownerError);
          }
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞—Ç—ã –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        const startDate = new Date();
        const endDate = new Date();
        endDate.setFullYear(endDate.getFullYear() + 1); // –ù–∞ –≥–æ–¥ –≤–ø–µ—Ä–µ–¥

        try {
          console.log('Fetching unavailable dates for item:', itemData.id);
          const unavailableData = await itemApi.getUnavailableDates(
            itemData.id,
            startDate.toISOString().split('T')[0],
            endDate.toISOString().split('T')[0]
          );
          console.log('Unavailable dates loaded:', unavailableData);
          setUnavailableDates(unavailableData);
        } catch (datesError) {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞—Ç—ã:', datesError);
        }

      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–∞:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ. –¢–æ–≤–∞—Ä –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å.');
      } finally {
        setLoading(false);
      }
    };

    loadItemDetails();
  }, [itemId]); // –£–±–∏—Ä–∞–µ–º canViewUsers –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'BYN'
    }).format(price);
  };

  const nextImage = () => {
    if (item?.images && item.images.length > 1) {
      setCurrentImageIndex((prev) => (prev + 1) % item.images.length);
    }
  };

  const prevImage = () => {
    if (item?.images && item.images.length > 1) {
      setCurrentImageIndex((prev) => (prev - 1 + item.images.length) % item.images.length);
    }
  };

  if (!isRenter()) {
    return (
      <div className="item-details-container">
        <div className="access-denied">
          <h2>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
          <p>–¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é RENTER –º–æ–≥—É—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤.</p>
          <button onClick={() => navigate('/dashboard')} className="back-btn">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    );
  }

  if (loading) {
    return (
      <div className="item-details-container">
        <div className="loading">
          <div className="spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ...</p>
        </div>
      </div>
    );
  }

  if (error || !item) {
    return (
      <div className="item-details-container">
        <div className="error-message">
          <h2>–û—à–∏–±–∫–∞</h2>
          <p>{error || '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'}</p>
          <button onClick={() => navigate('/search')} className="back-btn">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="item-details-container">
      <div className="item-details-header">
        <button onClick={() => navigate('/search')} className="back-btn">
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É
        </button>
      </div>

      <div className="item-details-content">
        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
        <div className="item-images-section">
          <div className="main-image">
            {item.images && item.images.length > 0 ? (
              <>
                <img 
                  src={item.images[currentImageIndex]} 
                  alt={item.title}
                  onError={(e) => {
                    (e.target as HTMLImageElement).src = '/placeholder-image.jpg';
                  }}
                />
                {item.images.length > 1 && (
                  <>
                    <button className="image-nav prev" onClick={prevImage}>
                      ‚Äπ
                    </button>
                    <button className="image-nav next" onClick={nextImage}>
                      ‚Ä∫
                    </button>
                  </>
                )}
              </>
            ) : (
              <div className="no-image">
                <span>–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</span>
              </div>
            )}
          </div>

          {item.images && item.images.length > 1 && (
            <div className="image-thumbnails">
              {item.images.map((image, index) => (
                <img
                  key={index}
                  src={image}
                  alt={`${item.title} ${index + 1}`}
                  className={index === currentImageIndex ? 'active' : ''}
                  onClick={() => setCurrentImageIndex(index)}
                  onError={(e) => {
                    (e.target as HTMLImageElement).src = '/placeholder-image.jpg';
                  }}
                />
              ))}
            </div>
          )}
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="item-main-info">
          <h1 className="item-title">{item.title}</h1>
          
          <div className="item-meta">
            <div className="item-category">
              {categories[item.category as keyof typeof categories] || item.category}
            </div>
            <div className="item-location">
              üìç {item.location}
            </div>
          </div>

          <div className="item-pricing">
            <div className="price-per-day">
              <span className="price">{formatPrice(item.pricePerDay)}</span>
              <span className="period">/–¥–µ–Ω—å</span>
            </div>
            <div className="deposit">
              –ó–∞–ª–æ–≥: {formatPrice(item.depositAmount)}
            </div>
          </div>

          <div className="item-availability">
            <span className={`availability-status ${item.available ? 'available' : 'unavailable'}`}>
              {item.available ? '‚úì –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∞—Ä–µ–Ω–¥—ã' : '‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
            </span>
          </div>

          <div className="item-description">
            <h3>–û–ø–∏—Å–∞–Ω–∏–µ</h3>
            <p>{item.description}</p>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ */}
          {owner && (
            <div className="owner-info">
              <h3>–í–ª–∞–¥–µ–ª–µ—Ü</h3>
              <div className="owner-details">
                <div className="owner-name">
                  {owner.firstName} {owner.lastName}
                </div>
                {owner.phoneNumber && (
                  <div className="owner-phone">
                    üìû {owner.phoneNumber}
                  </div>
                )}
                {owner.rating && (
                  <div className="owner-rating">
                    ‚≠ê –†–µ–π—Ç–∏–Ω–≥: {owner.rating.toFixed(1)}
                  </div>
                )}
                {owner.verified && (
                  <div className="owner-verified">
                    ‚úì –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
      </div>

      {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ */}
      {item.available && (
        <div className="availability-section">
          <h3>–ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏</h3>
          <p className="calendar-description">
            –ó–µ–ª–µ–Ω—ã–µ –¥–∞—Ç—ã - —Å–≤–æ–±–æ–¥–Ω—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã, –∫—Ä–∞—Å–Ω—ã–µ - –∑–∞–Ω—è—Ç—ã
          </p>
          <AvailabilityCalendar 
            itemId={item.id}
            unavailableDates={unavailableDates?.unavailableDates || []}
          />
        </div>
      )}

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <div className="item-actions">
        {item.available ? (
          <div className="action-buttons">
            <button 
              className="rent-btn primary"
              onClick={() => {
                // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∞—Ä–µ–Ω–¥—É
                alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –∞—Ä–µ–Ω–¥—É –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ');
              }}
            >
              –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å
            </button>
            <button 
              className="contact-btn secondary"
              onClick={() => {
                if (owner?.phoneNumber) {
                  window.open(`tel:${owner.phoneNumber}`);
                } else {
                  alert('–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
                }
              }}
            >
              –°–≤—è–∑–∞—Ç—å—Å—è —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
            </button>
          </div>
        ) : (
          <div className="unavailable-notice">
            <p>–≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∞—Ä–µ–Ω–¥—ã</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default ItemDetails;
