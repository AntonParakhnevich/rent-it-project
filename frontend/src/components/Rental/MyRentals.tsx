import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';
import { usePermissions } from '../../hooks/usePermissions';
import { RentalResponse } from '../../types';
import { rentalApi } from '../../services/api';
import { LandlordOnly } from '../Auth/ProtectedComponent';
import './MyRentals.css';

const MyRentals: React.FC = () => {
  const { user } = useAuth();
  const { isLandlord, canConfirmRentals } = usePermissions();
  const [rentals, setRentals] = useState<RentalResponse[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [filter, setFilter] = useState<string>('all');
  const [sortBy, setSortBy] = useState<'startDate' | 'endDate' | 'totalPrice'>('startDate');
  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');
  const [viewMode, setViewMode] = useState<'renter' | 'owner'>('renter');

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤ —Ä–µ–∂–∏–º renter, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å
  useEffect(() => {
    if (viewMode === 'owner' && !isLandlord()) {
      setViewMode('renter');
    }
  }, [viewMode, isLandlord]);
  const [confirmingRental, setConfirmingRental] = useState<number | null>(null);
  const [cancellingRental, setCancellingRental] = useState<number | null>(null);

  useEffect(() => {
    const fetchRentals = async () => {
      if (!user) return;

      try {
        setLoading(true);
        setError(null);
        
        let userRentals: RentalResponse[] = [];
        
        if (viewMode === 'renter') {
          // –ü–æ–ª—É—á–∞–µ–º –∞—Ä–µ–Ω–¥—ã –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä
          const response = await rentalApi.getRentalsByRenter(user.userId);
          userRentals = response.content;
        } else if (viewMode === 'owner' && isLandlord()) {
          // –ü–æ–ª—É—á–∞–µ–º –∞—Ä–µ–Ω–¥—ã –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å (–≤–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–µ–¥–º–µ—Ç–æ–≤)
          const response = await rentalApi.getRentalsByOwner(user.userId);
          userRentals = response.content;
        } else {
          // –ï—Å–ª–∏ —Ä–µ–∂–∏–º owner, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
          userRentals = [];
        }
        
        setRentals(userRentals);
      } catch (error: any) {
        setError(error.response?.data?.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Ä–µ–Ω–¥');
      } finally {
        setLoading(false);
      }
    };

    fetchRentals();
  }, [user, viewMode]);

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB'
    }).format(price);
  };

  const handleConfirmRental = async (rentalId: number) => {
    if (!canConfirmRentals()) return;

    try {
      setConfirmingRental(rentalId);
      await rentalApi.confirm(rentalId);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ª–æ–∫–∞–ª—å–Ω–æ
      setRentals(prevRentals => 
        prevRentals.map(rental => 
          rental.id === rentalId 
            ? { ...rental, status: 'CONFIRMED' }
            : rental
        )
      );
      
      alert('–ê—Ä–µ–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!');
    } catch (error: any) {
      alert(error.response?.data?.message || '–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã');
    } finally {
      setConfirmingRental(null);
    }
  };

  const handleCancelRental = async (rentalId: number) => {
    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç—É –∞—Ä–µ–Ω–¥—É?')) {
      return;
    }

    try {
      setCancellingRental(rentalId);
      await rentalApi.cancel(rentalId);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ª–æ–∫–∞–ª—å–Ω–æ
      setRentals(prevRentals => 
        prevRentals.map(rental => 
          rental.id === rentalId 
            ? { ...rental, status: 'CANCELLED' }
            : rental
        )
      );
      
      alert('–ê—Ä–µ–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞!');
    } catch (error: any) {
      alert(error.response?.data?.message || '–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∞—Ä–µ–Ω–¥—ã');
    } finally {
      setCancellingRental(null);
    }
  };

  const getStatusBadge = (status: string) => {
    const statusConfig = {
      'PENDING': { label: '–û–∂–∏–¥–∞–µ—Ç', className: 'status-pending' },
      'CONFIRMED': { label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞', className: 'status-confirmed' },
      'IN_PROGRESS': { label: '–í –ø—Ä–æ—Ü–µ—Å—Å–µ', className: 'status-in-progress' },
      'COMPLETED': { label: '–ó–∞–≤–µ—Ä—à–µ–Ω–∞', className: 'status-completed' },
      'CANCELLED': { label: '–û—Ç–º–µ–Ω–µ–Ω–∞', className: 'status-cancelled' },
    };

    const config = statusConfig[status as keyof typeof statusConfig] || 
                  { label: status, className: 'status-unknown' };

    return (
      <span className={`status-badge ${config.className}`}>
        {config.label}
      </span>
    );
  };

  const filteredAndSortedRentals = rentals
    .filter(rental => {
      if (filter === 'all') return true;
      return rental.status.toLowerCase() === filter.toLowerCase();
    })
    .sort((a, b) => {
      let aValue: any, bValue: any;
      
      switch (sortBy) {
        case 'startDate':
          aValue = new Date(a.startDate);
          bValue = new Date(b.startDate);
          break;
        case 'endDate':
          aValue = new Date(a.endDate);
          bValue = new Date(b.endDate);
          break;
        case 'totalPrice':
          aValue = a.totalPrice;
          bValue = b.totalPrice;
          break;
        default:
          return 0;
      }

      if (sortOrder === 'asc') {
        return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;
      } else {
        return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;
      }
    });

  const getStatistics = () => {
    const stats = {
      total: rentals.length,
      confirmed: rentals.filter(r => r.status === 'CONFIRMED').length,
      inProgress: rentals.filter(r => r.status === 'IN_PROGRESS').length,
      pending: rentals.filter(r => r.status === 'PENDING').length,
      completed: rentals.filter(r => r.status === 'COMPLETED').length,
      totalSpent: rentals.reduce((sum, r) => sum + r.totalPrice, 0)
    };
    return stats;
  };

  const stats = getStatistics();

  if (loading) {
    return (
      <div className="loading">
        <div className="spinner"></div>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –∞—Ä–µ–Ω–¥...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="error-container">
        <div className="error-message">
          <h2>–û—à–∏–±–∫–∞</h2>
          <p>{error}</p>
          <button 
            onClick={() => window.location.reload()} 
            className="btn btn-primary"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="my-rentals">
      <div className="rentals-header">
        <h1>–ú–æ–∏ –∞—Ä–µ–Ω–¥—ã</h1>
        <p>–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –∞—Ä–µ–Ω–¥–Ω—ã–º–∏ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏</p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="rentals-stats">
        <div className="stat-card">
          <div className="stat-icon">üìä</div>
          <div className="stat-info">
            <span className="stat-value">{stats.total}</span>
            <span className="stat-label">–í—Å–µ–≥–æ –∞—Ä–µ–Ω–¥</span>
          </div>
        </div>
        
        <div className="stat-card">
          <div className="stat-icon">üü¢</div>
          <div className="stat-info">
            <span className="stat-value">{stats.confirmed}</span>
            <span className="stat-label">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ</span>
          </div>
        </div>

        <div className="stat-card">
          <div className="stat-icon">üü¢</div>
          <div className="stat-info">
            <span className="stat-value">{stats.inProgress}</span>
            <span className="stat-label">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</span>
          </div>
        </div>
        
        <div className="stat-card">
          <div className="stat-icon">‚è≥</div>
          <div className="stat-info">
            <span className="stat-value">{stats.pending}</span>
            <span className="stat-label">–í –æ–∂–∏–¥–∞–Ω–∏–∏</span>
          </div>
        </div>
        
        <div className="stat-card">
          <div className="stat-icon">‚úÖ</div>
          <div className="stat-info">
            <span className="stat-value">{stats.completed}</span>
            <span className="stat-label">–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ</span>
          </div>
        </div>
        
        <div className="stat-card total">
          <div className="stat-icon">üí∞</div>
          <div className="stat-info">
            <span className="stat-value">{formatPrice(stats.totalSpent)}</span>
            <span className="stat-label">–û–±—â–∞—è —Å—É–º–º–∞</span>
          </div>
        </div>
      </div>

      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ –¥–ª—è –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª–µ–π */}
      {isLandlord() && (
        <div className="view-mode-switcher">
          <div className="mode-buttons">
            <button 
              className={`mode-btn ${viewMode === 'renter' ? 'active' : ''}`}
              onClick={() => setViewMode('renter')}
            >
              <span className="mode-icon">üè†</span>
              –ú–æ–∏ –∞—Ä–µ–Ω–¥—ã
            </button>
            <button 
              className={`mode-btn ${viewMode === 'owner' ? 'active' : ''}`}
              onClick={() => setViewMode('owner')}
            >
              <span className="mode-icon">üè¢</span>
              –ê—Ä–µ–Ω–¥—ã –º–æ–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            </button>
          </div>
          <p className="mode-description">
            {viewMode === 'renter' 
              ? '–ü—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∞—Ä–µ–Ω–¥—É–µ—Ç–µ —É –¥—Ä—É–≥–∏—Ö'
              : '–ü—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥—Ä—É–≥–∏–µ –∞—Ä–µ–Ω–¥—É—é—Ç —É –≤–∞—Å'
            }
          </p>
        </div>
      )}

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
      <div className="rentals-controls">
        <div className="filters">
          <label>–§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É:</label>
          <select 
            value={filter} 
            onChange={(e) => setFilter(e.target.value)}
            className="filter-select"
          >
            <option value="all">–í—Å–µ –∞—Ä–µ–Ω–¥—ã</option>
            <option value="pending">–û–∂–∏–¥–∞—é—Ç</option>
            <option value="confirmed">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ</option>
            <option value="inProgress">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</option>
            <option value="completed">–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ</option>
            <option value="cancelled">–û—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ</option>
          </select>
        </div>

        <div className="sorting">
          <label>–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ:</label>
          <select 
            value={sortBy} 
            onChange={(e) => setSortBy(e.target.value as any)}
            className="sort-select"
          >
            <option value="startDate">–î–∞—Ç–µ –Ω–∞—á–∞–ª–∞</option>
            <option value="endDate">–î–∞—Ç–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è</option>
            <option value="totalPrice">–°—Ç–æ–∏–º–æ—Å—Ç–∏</option>
          </select>
          
          <button 
            onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}
            className="sort-order-btn"
            title={sortOrder === 'asc' ? '–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é' : '–ü–æ —É–±—ã–≤–∞–Ω–∏—é'}
          >
            {sortOrder === 'asc' ? '‚Üë' : '‚Üì'}
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∞—Ä–µ–Ω–¥ */}
      {filteredAndSortedRentals.length === 0 ? (
        <div className="empty-state">
          <div className="empty-icon">üì¶</div>
          <h3>
            {filter === 'all' ? '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞—Ä–µ–Ω–¥' : `–ù–µ—Ç –∞—Ä–µ–Ω–¥ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "${filter}"`}
          </h3>
          <p>
            {filter === 'all' 
              ? '–ö–æ–≥–¥–∞ –≤—ã –Ω–∞—á–Ω—ë—Ç–µ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã, –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å'
              : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥—Ä—É–≥–∏—Ö –∞—Ä–µ–Ω–¥'
            }
          </p>
          {filter !== 'all' && (
            <button 
              onClick={() => setFilter('all')} 
              className="btn btn-secondary"
            >
              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞—Ä–µ–Ω–¥—ã
            </button>
          )}
        </div>
      ) : (
        <div className="rentals-grid">
          {filteredAndSortedRentals.map((rental) => (
            <div key={rental.id} className="rental-card">
              <div className="rental-card-header">
                <div className="rental-id">#{rental.id}</div>
                {getStatusBadge(rental.status)}
              </div>

              <div className="rental-card-body">
                <div className="rental-info">
                  <div className="info-row">
                    <span className="info-label">–ü—Ä–µ–¥–º–µ—Ç:</span>
                    <span className="info-value">#{rental.itemId}</span>
                  </div>
                  
                  <div className="info-row">
                    <span className="info-label">–ü–µ—Ä–∏–æ–¥:</span>
                    <span className="info-value">
                      {formatDate(rental.startDate)} - {formatDate(rental.endDate)}
                    </span>
                  </div>
                  
                  <div className="info-row">
                    <span className="info-label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                    <span className="info-value price">
                      {formatPrice(rental.totalPrice)}
                    </span>
                  </div>
                  
                  {rental.depositAmount > 0 && (
                    <div className="info-row">
                      <span className="info-label">–ó–∞–ª–æ–≥:</span>
                      <span className="info-value">
                        {formatPrice(rental.depositAmount)}
                      </span>
                    </div>
                  )}
                </div>
              </div>

              <div className="rental-card-footer">
                <Link 
                  to={`/rental/${rental.id}`} 
                  className="btn btn-primary btn-sm"
                >
                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </Link>
                
                {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª–µ–π */}
                {viewMode === 'owner' && canConfirmRentals() && rental.status === 'PENDING' && (
                  <button 
                    className="btn btn-success btn-sm"
                    onClick={() => handleConfirmRental(rental.id)}
                    disabled={confirmingRental === rental.id}
                  >
                    {confirmingRental === rental.id ? (
                      <>
                        <span className="spinner-sm"></span>
                        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é...
                      </>
                    ) : (
                      <>
                        <span>‚úì</span>
                        –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
                      </>
                    )}
                  </button>
                )}
                
                {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –¥–ª—è –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–æ–≤ –∏ –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª–µ–π */}
                {(rental.status === 'PENDING' || rental.status === 'CONFIRMED') && (
                  <button 
                    className="btn btn-danger btn-sm"
                    onClick={() => handleCancelRental(rental.id)}
                    disabled={cancellingRental === rental.id}
                  >
                    {cancellingRental === rental.id ? (
                      <>
                        <span className="spinner-sm"></span>
                        –û—Ç–º–µ–Ω—è—é...
                      </>
                    ) : (
                      <>
                        <span>‚úó</span>
                        –û—Ç–º–µ–Ω–∏—Ç—å
                      </>
                    )}
                  </button>
                )}
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default MyRentals;
